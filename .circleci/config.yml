version: 2.1

orbs:
  helm: circleci/helm@2.0.1
  terraform: circleci/terraform@3.1.0

commands:
  gcloud-snap-install:
    description: "Install gcloud using snap."
    steps:
      - run:
          name: "Install gcloud via snap"
          command: "sudo snap install google-cloud-cli --classic"
  gcloud-activate:
    steps:
      - run:
          name: "Init gcloud"
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
  gcloud-configure-docker:
    steps:
      - run:
          name: "Configure docker to use gcloud artifact repository in europe"
          command: gcloud --quiet auth configure-docker europe-docker.pkg.dev
  gcloud-get-kubeconfig:
    steps:
      - run:
          name: "Retrieve the kubeconfig file from gke-autpilot-paris"
          command: gcloud container clusters get-credentials my-cluster
  install-snapd:
    steps:
      - run:
          name: "Download and install snapd"
          command: |
            sudo apt update && sudo apt install -y snapd;
            sudo snap install core

jobs:
  build-push:
    parameters:
      ressource:
        type: string
      architecture:
        type: string
      service_path:
        type: string
      image_name:
        type: string
    machine:
      image: ubuntu-2004:current
    resource_class: << parameters.ressource >>
    steps:
      - checkout
      - gcloud-snap-install
      - gcloud-activate
      - gcloud-configure-docker
      - run:
          name: "<< parameters.image_name >>: Build (<< parameters.architecture >>)"
          working_directory: << parameters.service_path >>
          command: make build
      - run:
          name: "<< parameters.image_name >>: Linting (<< parameters.architecture >>)"
          working_directory: << parameters.service_path >>
          command: make linting
      - run:
          name: "<< parameters.image_name >>: Unit Test (<< parameters.architecture >>)"
          working_directory: << parameters.service_path >>
          command: make unit-test
      - run: 
          name: "<< parameters.image_name >>: push to registry (<< parameters.architecture >>)"
          working_directory: << parameters.service_path >>
          command: make push-<< parameters.architecture >>
  
  push-multi-arch:
    parameters:
      service_path:
        type: string
      image_name:
        type: string
    docker:
      - image: google/cloud-sdk
        auth:
            username: $DOCKER_USERNAME
            password: $DOCKER_PASSWORD
    resource_class: small
    steps:
      - checkout
      - gcloud-activate
      - gcloud-configure-docker
      - run:
          name: "<< parameters.image_name >>: create multi-arch manifest"
          working_directory: << parameters.service_path >>
          command: make arch-fusion
      - run:
          name: "<< parameters.image_name >>: push manifest"
          working_directory: << parameters.service_path >>
          command: make push-manifest

  push-helm-chart:
    docker:
      - image: google/cloud-sdk
        auth:
            username: $DOCKER_USERNAME
            password: $DOCKER_PASSWORD
    resource_class: small
    steps:
      - checkout
      - gcloud-activate
      - gcloud-configure-docker
      - helm/install-helm-client
      - run:
          name: "Package brushed-charts helm chart"
          working_directory: helm-charts
          command: make package
      - run:
          name: "Push packaged charts to registry (Google Artifact Registry)"
          working_directory: helm-charts
          command: make push
  
  integration-test:
    docker:
      - image: google/cloud-sdk
        auth:
            username: $DOCKER_USERNAME
            password: $DOCKER_PASSWORD
            
    steps:
      - checkout
      - install-snapd
      - gcloud-snap-install
      - gcloud-activate
      - gcloud-configure-docker
      - terraform/install:
          terraform_version: latest
      - terraform/validate:
          path: ./terraform/gke-autopilot-paris
      - terraform/init:
          path: ./terraform/gke-autopilot-paris
      - terraform/plan: # Get kubernetes connection info of 'gke-autopilot-paris' cluster
          path: ./terraform/gke-autopilot-paris
      - terraform/apply:
          path: ./terraform/gke-autopilot-paris
      

workflows:
  build-and-push:
    jobs:
      # - push-helm-chart:
      #     name: push-helm-chart
      #     context: brushed-charts

      # - build-push:
      #     name: oanda-stream_build-push_arm64
      #     context: brushed-charts
      #     image_name: oanda-stream 
      #     ressource: "arm.medium"
      #     architecture: "arm64"
      #     service_path: "services/oanda_stream"

      # - build-push:
      #     name: oanda-stream_build-push_amd64
      #     context: brushed-charts
      #     image_name: oanda-stream
      #     ressource: "medium"
      #     architecture: "amd64"
      #     service_path: "services/oanda_stream"

      # - push-multi-arch:
      #     context: brushed-charts
      #     service_path: "services/oanda_stream"
      #     image_name: oanda-stream
      #     requires:
      #       - oanda-stream_build-push_amd64
      #       - oanda-stream_build-push_arm64
      #       - push-helm-chart

      - integration-test:
          context: brushed-charts

